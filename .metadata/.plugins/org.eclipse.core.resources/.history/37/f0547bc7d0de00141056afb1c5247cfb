package statistics;

import java.util.Random;

public class PoissonDistribution {
	private static Random random = new Random();
	
	public PoissonDistribution(){
	}
	
	public int getRandomNumber(double lambda){
		int result = 0;
		double scaler = Math.exp(-lambda);
		double adder = scaler;
		double ran = random.nextDouble();
		
		while (ran > adder) {
			++result;
			scaler *= lambda / result;
			adder += scaler;
		}
		
		return result;
	}
	
	public double getBestLambda(int expectedNumber, int observedNumber, int range, double numOfRandom, double increment){
		double bestLambda = 0;
		double bestNumberCorrect = 0;
		for(int i = 0; i < range; i++){
			double lambda = expectedNumber + increment * i;
			int numberCorrect = 0;
			for(int j = 0; j < numOfRandom; j++){
				int randomNumber = getRandomNumber(lambda);
				if (randomNumber == observedNumber){
					numberCorrect++;
				}
			}
			System.out.println(lambda + "\t" + numberCorrect);
			if (numberCorrect > bestNumberCorrect){
				bestLambda = lambda;
				bestNumberCorrect = numberCorrect;
			}
		}
		System.out.println(bestLambda + "\t" + bestNumberCorrect);
		return bestLambda;
	}
}
